// Code generated by MockGen. DO NOT EDIT.
// Source: service/paypal.go

package service

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	paypal "github.com/plutov/paypal/v4"
	reflect "reflect"
)

// MockPayPalSDK is a mock of PayPalSDK interface
type MockPayPalSDK struct {
	ctrl     *gomock.Controller
	recorder *MockPayPalSDKMockRecorder
}

// MockPayPalSDKMockRecorder is the mock recorder for MockPayPalSDK
type MockPayPalSDKMockRecorder struct {
	mock *MockPayPalSDK
}

// NewMockPayPalSDK creates a new mock instance
func NewMockPayPalSDK(ctrl *gomock.Controller) *MockPayPalSDK {
	mock := &MockPayPalSDK{ctrl: ctrl}
	mock.recorder = &MockPayPalSDKMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPayPalSDK) EXPECT() *MockPayPalSDKMockRecorder {
	return m.recorder
}

// GetAccessToken mocks base method
func (m *MockPayPalSDK) GetAccessToken(ctx context.Context) (*paypal.TokenResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccessToken", ctx)
	ret0, _ := ret[0].(*paypal.TokenResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccessToken indicates an expected call of GetAccessToken
func (mr *MockPayPalSDKMockRecorder) GetAccessToken(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccessToken", reflect.TypeOf((*MockPayPalSDK)(nil).GetAccessToken), ctx)
}

// CreateOrder mocks base method
func (m *MockPayPalSDK) CreateOrder(ctx context.Context, intent string, purchaseUnits []paypal.PurchaseUnitRequest, payer *paypal.CreateOrderPayer, appContext *paypal.ApplicationContext) (*paypal.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrder", ctx, intent, purchaseUnits, payer, appContext)
	ret0, _ := ret[0].(*paypal.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrder indicates an expected call of CreateOrder
func (mr *MockPayPalSDKMockRecorder) CreateOrder(ctx, intent, purchaseUnits, payer, appContext interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrder", reflect.TypeOf((*MockPayPalSDK)(nil).CreateOrder), ctx, intent, purchaseUnits, payer, appContext)
}
