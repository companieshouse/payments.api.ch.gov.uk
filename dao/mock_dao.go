// Code generated by MockGen. DO NOT EDIT.
// Source: dao.go

// Package dao is a generated GoMock package.
package dao

import (
	models "github.com/companieshouse/payments.api.ch.gov.uk/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDAO is a mock of DAO interface
type MockDAO struct {
	ctrl     *gomock.Controller
	recorder *MockDAOMockRecorder
}

// MockDAOMockRecorder is the mock recorder for MockDAO
type MockDAOMockRecorder struct {
	mock *MockDAO
}

// NewMockDAO creates a new mock instance
func NewMockDAO(ctrl *gomock.Controller) *MockDAO {
	mock := &MockDAO{ctrl: ctrl}
	mock.recorder = &MockDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDAO) EXPECT() *MockDAOMockRecorder {
	return m.recorder
}

// CreatePaymentResourceDB mocks base method
func (m *MockDAO) CreatePaymentResourceDB(paymentResource *models.PaymentResource) error {
	ret := m.ctrl.Call(m, "CreatePaymentResourceDB", paymentResource)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreatePaymentResourceDB indicates an expected call of CreatePaymentResourceDB
func (mr *MockDAOMockRecorder) CreatePaymentResourceDB(paymentResource interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePaymentResourceDB", reflect.TypeOf((*MockDAO)(nil).CreatePaymentResourceDB), paymentResource)
}
